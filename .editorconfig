[*]
indent_style = space
indent_size = 4
end_of_line = lf
dotnet_style_operator_placement_when_wrapping = beginning_of_line
tab_width = 4
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion
dotnet_style_prefer_auto_properties = true:silent
dotnet_style_object_initializer = true:warning
dotnet_style_collection_initializer = true:suggestion
dotnet_style_prefer_simplified_boolean_expressions = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_style_prefer_conditional_expression_over_return = true:silent
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_compound_assignment = true:suggestion
dotnet_style_prefer_simplified_interpolation = true:suggestion
dotnet_style_namespace_match_folder = true:suggestion

[*.json]
indent_size = 2

[*.csproj]
indent_size = 2

[*.yml]
indent_size = 2

[*.cs]

# var preferences
csharp_style_var_for_built_in_types = false:warning
csharp_style_var_when_type_is_apparent = false:warning
csharp_style_var_elsewhere = false:warning
# Expression-bodied members
csharp_style_expression_bodied_methods = true:silent
csharp_style_expression_bodied_constructors = false:silent
csharp_style_expression_bodied_operators = true:suggestion
csharp_style_expression_bodied_properties = true:suggestion
csharp_style_expression_bodied_indexers = true:suggestion
csharp_style_expression_bodied_accessors = true:suggestion
# Pattern matching preferences
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion
# Null-checking preferences
csharp_style_throw_expression = true:suggestion
csharp_style_conditional_delegate_call = true:suggestion
# Modifier preferences
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:warning
# Expression-level preferences
csharp_prefer_braces = when_multiline:warning
csharp_style_deconstructed_variable_declaration = true:suggestion
csharp_prefer_simple_default_expression = true:warning
csharp_style_pattern_local_over_anonymous_function = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion

csharp_using_directive_placement = outside_namespace:silent
csharp_prefer_simple_using_statement = true:suggestion
csharp_style_namespace_declarations = block_scoped:silent
csharp_style_prefer_method_group_conversion = true:silent
csharp_style_prefer_top_level_statements = true:silent
csharp_style_expression_bodied_lambdas = true:silent
csharp_style_expression_bodied_local_functions = false:silent


###############################
# Naming Conventions          #
###############################

# PascalCase
dotnet_naming_style.pascal_case_style.capitalization = pascal_case
# camelCase
dotnet_naming_style.camel_case_style.capitalization = camel_case
# PascalCase + "Async"
dotnet_naming_style.pascal_case_async_style.capitalization = pascal_case
dotnet_naming_style.pascal_case_async_style.required_suffix = Async
# "_" + camelCase
dotnet_naming_style.underscore_camel_case_style.capitalization = camel_case
dotnet_naming_style.underscore_camel_case_style.required_prefix = _
# Methods and Properties must be pascal case
dotnet_naming_rule.methods_and_properties_must_be_pascal_case.severity = warning
dotnet_naming_rule.methods_and_properties_must_be_pascal_case.symbols = method_and_property_symbols
dotnet_naming_rule.methods_and_properties_must_be_pascal_case.style = pascal_case_style
dotnet_naming_symbols.method_and_property_symbols.applicable_kinds = method,property
dotnet_naming_symbols.method_and_property_symbols.applicable_accessibilities = *
# Async methods must end in Async
dotnet_naming_rule.async_methods_must_end_with_async.severity = warning
dotnet_naming_rule.async_methods_must_end_with_async.symbols  = method_symbols
dotnet_naming_rule.async_methods_must_end_with_async.style = pascal_case_async_style
dotnet_naming_symbols.method_symbols.applicable_kinds   = method
dotnet_naming_symbols.method_symbols.required_modifiers = async
# Public members must be pascal case
dotnet_naming_rule.public_members_must_be_capitalized.severity = warning
dotnet_naming_rule.public_members_must_be_capitalized.symbols  = public_symbols
dotnet_naming_rule.public_members_must_be_capitalized.style    = pascal_case_style
dotnet_naming_symbols.public_symbols.applicable_kinds   = property,method,field,event,delegate
dotnet_naming_symbols.public_symbols.applicable_accessibilities = public,internal,protected,protected_internal
# Named tuples must be pascal case
dotnet_naming_rule.public_members_must_be_capitalized.severity = warning
dotnet_naming_rule.public_members_must_be_capitalized.symbols  = named_tuples
dotnet_naming_rule.public_members_must_be_capitalized.style = pascal_case_style
dotnet_naming_symbols.named_tuples.applicable_kinds   = tuples
dotnet_naming_symbols.named_tuples.applicable_accessibilities = public,internal,protected,protected_internal
# Fields must be camel case prefixed with an underscore
dotnet_naming_rule.non_public_members_must_be_underscored_camel_case.severity = warning
dotnet_naming_rule.non_public_members_must_be_underscored_camel_case.symbols  = fields
dotnet_naming_rule.non_public_members_must_be_underscored_camel_case.style = underscore_camel_case_style
dotnet_naming_symbols.fields.applicable_kinds   = field
dotnet_naming_symbols.fields.applicable_accessibilities = private
# Constants must be pascal case
dotnet_naming_rule.constant_fields_should_be_upper_case.severity = warning
dotnet_naming_rule.constant_fields_should_be_upper_case.symbols  = constant_fields
dotnet_naming_rule.constant_fields_should_be_upper_case.style = pascal_case_style
dotnet_naming_symbols.constant_fields.applicable_kinds   = field
dotnet_naming_symbols.constant_fields.required_modifiers = const
# Static readonly fields must be pascal case
dotnet_naming_rule.static_readonly_fields_should_be_upper_case.severity = warning
dotnet_naming_rule.static_readonly_fields_should_be_upper_case.symbols  = static_readonly_fields
dotnet_naming_rule.static_readonly_fields_should_be_upper_case.style = pascal_case_style
dotnet_naming_symbols.static_readonly_fields.applicable_kinds   = field
dotnet_naming_symbols.static_readonly_fields.required_modifiers = static,readonly
# Locals must be camel case
dotnet_naming_rule.locals_should_be_upper_case.severity = warning
dotnet_naming_rule.locals_should_be_upper_case.symbols  = locals
dotnet_naming_rule.locals_should_be_upper_case.style = camel_case_style
dotnet_naming_symbols.locals.applicable_kinds = locals

###############################
# C# Formatting Rules         #
###############################
# New line preferences
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true
# Indentation preferences
csharp_indent_case_contents = true
csharp_indent_switch_labels = true
csharp_indent_labels = one_less_than_current
# Space preferences
csharp_space_after_cast = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_around_binary_operators = before_and_after
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
# Wrapping preferences
csharp_preserve_single_line_statements = true
csharp_preserve_single_line_blocks = true